import Head from "next/head";
import prisma from "../../prisma/client";

export default function Home({ articles }) {

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            gap: "25px",
            backgroundColor: "#F0EAD6",
            padding: "10px",
          }}
        >
          {articles
            ?.filter(
              (article) =>
                article?.ai_summary?.length > 0 &&
                article?.ai_summary[article.ai_summary?.length - 1] === "."
            )
            ?.map((article: any) => (
              <div
                key={article._id}
                style={{
                  padding: "10px",
                  boxShadow: "2px 2px",
                  borderRadius: "8px",
                  width: "max(400px, 40vw)",
                  backgroundColor: "white",
                }}
              >
                {/* <h3
                  key={article?.publishedAt}
                  style={{ padding: "10px 0", color: "blue" }}
                >
                  {article?.title}
                </h3> */}
                <h4 style={{ padding: "10px 0", lineHeight: '25px' }}>{article?.ai_summary}</h4>
                {article.image && (
                  <img
                    src={article.image}
                    alt="article image"
                    style={{ display: "none" }}
                    onLoad={(event) => (event.target.style.display = "block")}
                    height={150}
                  />
                )}
              </div>
            ))}
        </div>
      </main>
    </>
  );
}


export async function getServerSideProps() {
  const articles = await prisma.newsarticles.findMany({})
  return {
    props: { articles },
  }
}
